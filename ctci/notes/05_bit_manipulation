----------------------------------------------------------------
| CH 5 - BIT MANIPULATION                                      |
----------------------------------------------------------------

- Python Bit Operations

    x << y      x shifted to the left by y places
    x >> y      x shifted to the right by y places
    x & y       bitwise and
    x | y       bitwise or
    ~x          negation of x
    x ^ y       exclusive or



- Bit Operation Examples

    0110 + 0010
    ------------------
         = 1000

    0011 + 0010
    ------------------
         = 0101

    0110 + 0110
    ------------------
         = 1100   (equivalent to (0110 * 2), which is 0110 shifted to the left by 1)

    
    0110 - 0011
    ------------------
         = 0011

    1000 - 0110
    ------------------
         = 0010


    0011 * 0101
    ------------------
         = 0101 + 01010
         = 0101 + 1010
         = 1111

    0011 * 0011
    ------------------
         = 0011 + 00110
         = 0011 + 0110
         = 1001


    0100 * 0011
    ------------------
         = 001100
         = 1100


    1101 >> 2
    ------------------
         = 0011

    1101 ^ 0101
    ------------------
         = 1000

    1101 ^ (~1101)
    ------------------
         = 1101 ^ 0010
         = 1111

    1011 & (~0 << 2)
    ------------------
         = 1011 & (1111 << 2)
         = 1011 & 1100
         = 1000 



- Bit Facts and Tricks

    Note: 0s is a sequence of zeros and 1s is a sequence of ones

    x ^ 0s = x          x & 0s = 0           x | 0s = x
    x ^ 1s = ~x         x & 1s = x           x | 1s = 1s
    x ^ x  = 0          x & x  = x           x | x  = x


    - Remember that these operations happen bit by bit, with what's happening on one
        bit never impacting the other bits.